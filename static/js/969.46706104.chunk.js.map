{"version":3,"file":"static/js/969.46706104.chunk.js","mappings":"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","sources":["components/ErrorFallback/ErrorFallback.jsx","components/ListItem/ListItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/MovieSearchPage.js","utils/api.js","utils/status.js"],"sourcesContent":["import React from 'react';\n\nexport default function ErrorFallback({ error }) {\n  return (<p>An error happened: {error}</p>);\n}\n","import styled from '@emotion/styled';\n\nexport const ListItemStyled = styled('li')`\n  padding-block: 5px;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieItem({\n  id,\n  name,\n}) {\n  const location = useLocation();\n\n  return (<Link to={`/movies/${id}`} state={{ from: location }}>\n    {name}\n  </Link>);\n}\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from '../MovieItem/MovieItem';\nimport { ListItemStyled } from '../ListItem/ListItem.styled';\n\nexport default function MovieList({ movies }) {\n  return (<ul>\n    {movies.map(({\n      id,\n      name,\n      title,\n    }) => <ListItemStyled key={id}>\n      <MovieItem id={id}\n                 name={name === undefined ? title : name} />\n    </ListItemStyled>)}\n  </ul>);\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  })).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm() {\n  const [currentQueryValue, setCurrentQueryValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    setCurrentQueryValue(queryParam);\n  }, [queryParam]);\n\n  const handleQueryValueChange = (newValue) => {\n    setCurrentQueryValue(newValue);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const query = event.target.elements['query'].value;\n\n    if (query.trim() === '') {\n      setSearchParams({});\n      return;\n    }\n\n    setSearchParams({\n      query,\n    });\n  };\n\n  return (<form onSubmit={handleSubmit}>\n    <input type='text'\n           name='query'\n           value={currentQueryValue}\n           onChange={(e) => handleQueryValueChange(e.target.value)}\n    />\n    <button type='submit'>Search</button>\n  </form>);\n}\n\nSearchForm.propTypes = {\n  queryKey: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport LoadingFallback from '../components/LoadingFallback/LoadingFallback';\nimport ErrorFallback from '../components/ErrorFallback/ErrorFallback';\nimport MovieList from '../components/MovieList/MovieList';\nimport Api from '../utils/api';\nimport { Status } from '../utils/status';\n\nconst QUERY_KEY = 'query';\n\nexport default function MovieSearchPage() {\n  const [resultsList, setResultsList] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(QUERY_KEY) ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    const fetchMovies = async () => {\n\n      try {\n        setStatus(Status.PENDING);\n        const list = await Api.fetchMoviesByQuery(query, controller);\n        setResultsList(list.results);\n        setStatus(Status.RESOLVED);\n      } catch (e) {\n        if (e.code === 'ERR_CANCELED') {\n          return;\n        }\n\n        Notify.failure(`Fetch error. Code: ${e.request.status}`);\n        setError(e.request.status);\n        setStatus(Status.REJECTED);\n      }\n    };\n\n    fetchMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  return (<div>\n    <SearchForm queryKey={QUERY_KEY} />\n    {status === Status.PENDING && <LoadingFallback />}\n    {status === Status.RESOLVED && <MovieList movies={resultsList} />}\n    {status === Status.REJECTED && <ErrorFallback error={error} />}\n  </div>);\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NDdmZTU4ZWJkMjMzZDY5Y2VlN2RjYTQ2ZWYwOGFlNiIsInN1YiI6IjY0YWE4Yzk0M2UyZWM4MDEyZWUzOWM2OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JlMf1XMEtVXHat5MkCciJRlAPG65by9hu8CeaKn8o0o';\n\nconst fetchMoviesTrending = async (abortController) => {\n  const settings = {};\n\n  if (abortController !== undefined && abortController !== null) {\n    settings.signal = abortController.signal;\n  }\n\n  const response = await axios.get('/trending/all/day', settings);\n\n  return response.data;\n};\n\nconst fetchMoviesByQuery = async (query = '', abortController) => {\n  const settings = {};\n\n  if (abortController !== undefined && abortController !== null) {\n    settings.signal = abortController.signal;\n  }\n\n  const response = await axios.get(`/search/movie?query=${query}`, settings);\n\n  return response.data;\n};\n\nconst fetchMovieDetailsById = async (id = '', abortController) => {\n  const settings = {};\n\n  if (abortController !== undefined && abortController !== null) {\n    settings.signal = abortController.signal;\n  }\n\n  const response = await axios.get(`/movie/${id}`, settings);\n\n  return response.data;\n};\n\nconst fetchMovieCreditsById = async (id = '', abortController) => {\n  const settings = {};\n\n  if (abortController !== undefined && abortController !== null) {\n    settings.signal = abortController.signal;\n  }\n\n  const response = await axios.get(`/movie/${id}/credits`, settings);\n\n  return response.data;\n};\n\nconst fetchMovieReviewsById = async (id = '', abortController) => {\n  const settings = {};\n\n  if (abortController !== undefined && abortController !== null) {\n    settings.signal = abortController.signal;\n  }\n\n  const response = await axios.get(`/movie/${id}/reviews`, settings);\n\n  return response.data;\n};\n\nconst api = {\n  fetchMoviesTrending,\n  fetchMoviesByQuery,\n  fetchMovieDetailsById,\n  fetchMovieCreditsById,\n  fetchMovieReviewsById,\n};\n\nexport default api;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["ErrorFallback","_ref","error","_jsxs","children","ListItemStyled","styled","_templateObject","_taggedTemplateLiteral","MovieItem","id","name","location","useLocation","_jsx","Link","to","concat","state","from","MovieList","movies","map","_ref2","title","undefined","SearchForm","_searchParams$get","_useState","useState","_useState2","_slicedToArray","currentQueryValue","setCurrentQueryValue","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryParam","get","useEffect","onSubmit","event","preventDefault","query","target","elements","value","trim","type","onChange","e","newValue","QUERY_KEY","MovieSearchPage","resultsList","setResultsList","_useState3","Status","_useState4","status","setStatus","_useState5","_useState6","setError","controller","AbortController","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","list","_context","prev","next","Api","sent","results","t0","code","abrupt","Notify","request","stop","apply","arguments","abort","queryKey","LoadingFallback","axios","fetchMoviesTrending","abortController","settings","response","signal","data","_x","fetchMoviesByQuery","_callee2","_args2","_context2","length","fetchMovieDetailsById","_ref3","_callee3","_args3","_context3","fetchMovieCreditsById","_ref4","_callee4","_args4","_context4","fetchMovieReviewsById","_ref5","_callee5","_args5","_context5","api","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}